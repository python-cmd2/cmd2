# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/vsts/pipelines/languages/python

jobs:

- job: 'Test'

  # Configure Build Environment to use Azure Pipelines to build Python project using macOS
  pool:
    vmImage: 'macOS-latest'  # 10.14 Mojave, Azure will be adding Catalina or macOS-10.15 on February 3, 2020

  # Run the pipeline with multiple Python versions
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
        NOXSESSION: 'tests-3.6'
      Python37:
        python.version: '3.7'
        NOXSESSION: 'tests-3.7'
      Python38:
        python.version: '3.8'
        NOXSESSION: 'tests-3.8'
      Python39:
        python.version: '3.9'
        NOXSESSION: 'tests-3.9'
#      Python310:
#        python.version: '3.10.0b2'
#        NOXSESSION: 'tests-3.10'
    # Increase the maxParallel value to simultaneously run the job for all versions in the matrix (max 10 for free open-source)
    maxParallel: 10

  steps:
    # Set the UsePythonVersion task to reference the matrix variable for its Python version
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

    # Install dependencies - install specific PyPI packages with pip, including cmd2 dependencies
  - script: |
      python -m pip install --upgrade pip && pip3 install --upgrade setuptools nox
    displayName: 'Upgrade pip and setuptools'
    continueOnError: false

    # TODO: Consider adding a lint test to use pycodestyle, flake8, or pylint, to check code style conventions

    # Test - test with pytest, collect coverage metrics with pytest-cov, and publish these metrics to codecov.io
  - script: |
      nox --non-interactive --session $(NOXSESSION)
    displayName: 'Run tests and code coverage'
    continueOnError: false

    # Publish test results to the Azure DevOps server
  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-*.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()
