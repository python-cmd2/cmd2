[build-system]
requires = ["build>=1.2.1", "setuptools>=64", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "cmd2"
dynamic = ["version"]
description = "cmd2 - quickly build feature-rich and user-friendly interactive command line applications in Python"
authors = [{ name = "cmd2 Contributors" }]
readme = "README.md"
requires-python = ">=3.10"
keywords = ["CLI", "cmd", "command", "interactive", "prompt", "Python"]
license = "MIT"
license-files = ["LICENSE"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Programming Language :: Python :: Free Threading :: 3 - Stable",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "backports.strenum; python_version == '3.10'",
    "gnureadline>=8; platform_system == 'Darwin'",
    "pyperclip>=1.8",
    "pyreadline3>=3.4; platform_system == 'Windows'",
    "rich>=14.1.0",
    "rich-argparse>=1.7.1",
]

[dependency-groups]
build = ["build>=1.2.1", "setuptools>=64", "setuptools-scm>=8"]
dev = [
    "black>=24",
    "codecov>=2",
    "invoke>=2",
    "ipython>=8",
    "mkdocs-git-revision-date-localized-plugin>=1.3",
    "mkdocs-include-markdown-plugin>=6",
    "mkdocs-macros-plugin>=1",
    "mkdocs-material>=8",
    "mkdocstrings[python]>=0.26",
    "mypy>=1.12",
    "pre-commit>=2.20.0",
    "pytest>=7",
    "pytest-cov>=4",
    "pytest-mock>=3.14",
    "ruff>=0.9",
    "twine>=6",
]
docs = [
    "black>=24",
    "mkdocs-git-revision-date-localized-plugin>=1.3",
    "mkdocs-include-markdown-plugin>=6",
    "mkdocs-macros-plugin>=1",
    "mkdocs-material>=8",
    "mkdocstrings[python]>=0.26",
    "setuptools>=64",
    "setuptools_scm>=8",
]
quality = ["pre-commit>=2.20.0"]
test = [
    "codecov>=2",
    "coverage>=7",
    "pytest>=7",
    "pytest-cov>=4",
    "pytest-mock>=3.14",
]
validate = ["mypy>=1.12", "ruff>=0.9", "types-setuptools>=69"]

[tool.mypy]
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
exclude = [
    "^.git/",
    "^.venv/",
    "^build/",        # .build directory
    "^docs/",         # docs directory
    "^dist/",
    "^examples/",     # examples directory
    "^noxfile\\.py$", # nox config file
    "setup\\.py$",    # any files named setup.py
    "^site/",
    "^tasks\\.py$",   # tasks.py invoke config file
    "^tests/",        # tests directory
]
files = ['.']
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = false

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = [
    "--cov=cmd2",
    "--cov-append",
    "--cov-report=term",
    "--cov-report=html",
]

[tool.setuptools]
packages = ["cmd2"]

[tool.setuptools_scm]

[tool.uv]
default-groups = ["build", "dev"]
